#Ex. 2 :- Extend your previous solution to include a third parameter "order" which can be either "ASC" or "DESC. 
Depending of the order provided, the pyramid will be displayed in ascending order ("ASC") or descending order ("DESC").

Examples:

A pyramid with 5 levels ASC:

advanced_nested_pyramid(5, '*', 'ASC')
*
**
****
*****
******
A pyramid with 5 levels DESC:

advanced_nested_pyramid(5, '*', 'DESC')
*****
****
***
**
*



Solution :- 

def advanced_nested_pyramid(height, char, order):
    pyramid = ''

    for level in range(1, height + 1):
        row = ''
        if order == 'ASC':
            range_limit = level
        else:
            range_limit = height - level + 1

        for c in range(range_limit):
            row += char

        row += '\n'
        pyramid += row

    return pyramid
